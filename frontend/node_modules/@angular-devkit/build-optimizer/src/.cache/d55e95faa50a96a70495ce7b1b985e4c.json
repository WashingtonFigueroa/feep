{"remainingRequest":"C:\\wamp64\\www\\DTMOWED\\feep\\frontend\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\wamp64\\www\\DTMOWED\\feep\\frontend\\node_modules\\core-js\\modules\\es6.math.fround.js","dependencies":[{"path":"C:\\wamp64\\www\\DTMOWED\\feep\\frontend\\node_modules\\core-js\\modules\\es6.math.fround.js","mtime":1548987611359},{"path":"C:\\wamp64\\www\\DTMOWED\\feep\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1548987609424},{"path":"C:\\wamp64\\www\\DTMOWED\\feep\\frontend\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1548987590941}],"contextDependencies":[],"result":["// 20.2.2.16 Math.fround(x)\r\nvar $export   = require('./_export')\r\n  , sign      = require('./_math-sign')\r\n  , pow       = Math.pow\r\n  , EPSILON   = pow(2, -52)\r\n  , EPSILON32 = pow(2, -23)\r\n  , MAX32     = pow(2, 127) * (2 - EPSILON32)\r\n  , MIN32     = pow(2, -126);\r\n\r\nvar roundTiesToEven = function(n){\r\n  return n + 1 / EPSILON - 1 / EPSILON;\r\n};\r\n\r\n\r\n$export($export.S, 'Math', {\r\n  fround: function fround(x){\r\n    var $abs  = Math.abs(x)\r\n      , $sign = sign(x)\r\n      , a, result;\r\n    if($abs < MIN32)return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;\r\n    a = (1 + EPSILON32 / EPSILON) * $abs;\r\n    result = a - (a - $abs);\r\n    if(result > MAX32 || result != result)return $sign * Infinity;\r\n    return $sign * result;\r\n  }\r\n});",null]}