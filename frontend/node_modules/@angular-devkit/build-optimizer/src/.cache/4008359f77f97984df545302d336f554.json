{"remainingRequest":"C:\\wamp64\\www\\DTMOWED\\feep\\frontend\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\wamp64\\www\\DTMOWED\\feep\\frontend\\node_modules\\rxjs\\_esm5\\internal\\config.js","dependencies":[{"path":"C:\\wamp64\\www\\DTMOWED\\feep\\frontend\\node_modules\\rxjs\\_esm5\\internal\\config.js","mtime":1548987628254},{"path":"C:\\wamp64\\www\\DTMOWED\\feep\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1548987609424},{"path":"C:\\wamp64\\www\\DTMOWED\\feep\\frontend\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1548987590941}],"contextDependencies":[],"result":["/** PURE_IMPORTS_START  PURE_IMPORTS_END */\r\nvar _enable_super_gross_mode_that_will_cause_bad_things = false;\r\n/**\r\n * The global configuration object for RxJS, used to configure things\r\n * like what Promise contructor should used to create Promises\r\n */\r\nexport var config = {\r\n    /**\r\n     * The promise constructor used by default for methods such as\r\n     * {@link toPromise} and {@link forEach}\r\n     */\r\n    Promise: undefined,\r\n    /**\r\n     * If true, turns on synchronous error rethrowing, which is a deprecated behavior\r\n     * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\r\n     * call in a try/catch block. It also enables producer interference, a nasty bug\r\n     * where a multicast can be broken for all observers by a downstream consumer with\r\n     * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BY TIME\r\n     * FOR MIGRATION REASONS.\r\n     */\r\n    set useDeprecatedSynchronousErrorHandling(value) {\r\n        if (value) {\r\n            var error = /*@__PURE__*/ new Error();\r\n            /*@__PURE__*/ console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\r\n        }\r\n        else if (_enable_super_gross_mode_that_will_cause_bad_things) {\r\n            /*@__PURE__*/ console.log('RxJS: Back to a better error behavior. Thank you. <3');\r\n        }\r\n        _enable_super_gross_mode_that_will_cause_bad_things = value;\r\n    },\r\n    get useDeprecatedSynchronousErrorHandling() {\r\n        return _enable_super_gross_mode_that_will_cause_bad_things;\r\n    },\r\n};\r\n//# sourceMappingURL=config.js.map\r\n",null]}