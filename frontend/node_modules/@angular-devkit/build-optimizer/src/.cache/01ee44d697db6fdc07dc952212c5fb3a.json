{"remainingRequest":"C:\\Users\\HP User\\Documents\\trabajos\\washington\\fepp\\frontend\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\HP User\\Documents\\trabajos\\washington\\fepp\\frontend\\node_modules\\rxjs\\_esm5\\internal\\operators\\merge.js","dependencies":[{"path":"C:\\Users\\HP User\\Documents\\trabajos\\washington\\fepp\\frontend\\node_modules\\rxjs\\_esm5\\internal\\operators\\merge.js","mtime":1549240439989},{"path":"C:\\Users\\HP User\\Documents\\trabajos\\washington\\fepp\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1549240389071},{"path":"C:\\Users\\HP User\\Documents\\trabajos\\washington\\fepp\\frontend\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1549240333687}],"contextDependencies":[],"result":["/** PURE_IMPORTS_START _observable_merge PURE_IMPORTS_END */\r\nimport { merge as mergeStatic } from '../observable/merge';\r\n/* tslint:enable:max-line-length */\r\n/**\r\n * @deprecated Deprecated in favor of static merge.\r\n */\r\nexport function merge() {\r\n    var observables = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        observables[_i] = arguments[_i];\r\n    }\r\n    return function (source) { return source.lift.call(mergeStatic.apply(void 0, [source].concat(observables))); };\r\n}\r\n//# sourceMappingURL=merge.js.map\r\n",null]}