{"remainingRequest":"C:\\wamp64\\www\\DTMOWED\\feep\\frontend\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\wamp64\\www\\DTMOWED\\feep\\frontend\\node_modules\\rxjs\\_esm5\\internal\\operators\\zip.js","dependencies":[{"path":"C:\\wamp64\\www\\DTMOWED\\feep\\frontend\\node_modules\\rxjs\\_esm5\\internal\\operators\\zip.js","mtime":1548987628431},{"path":"C:\\wamp64\\www\\DTMOWED\\feep\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1548987609424},{"path":"C:\\wamp64\\www\\DTMOWED\\feep\\frontend\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1548987590941}],"contextDependencies":[],"result":["/** PURE_IMPORTS_START _observable_zip PURE_IMPORTS_END */\r\nimport { zip as zipStatic } from '../observable/zip';\r\n/* tslint:enable:max-line-length */\r\n/**\r\n * @deprecated Deprecated in favor of static zip.\r\n */\r\nexport function zip() {\r\n    var observables = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        observables[_i] = arguments[_i];\r\n    }\r\n    return function zipOperatorFunction(source) {\r\n        return source.lift.call(zipStatic.apply(void 0, [source].concat(observables)));\r\n    };\r\n}\r\n//# sourceMappingURL=zip.js.map\r\n",null]}