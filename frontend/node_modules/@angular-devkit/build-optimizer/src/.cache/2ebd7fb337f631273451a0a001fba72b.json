{"remainingRequest":"C:\\wamp64\\www\\DTMOWED\\feep\\frontend\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\wamp64\\www\\DTMOWED\\feep\\frontend\\node_modules\\rxjs\\_esm5\\internal\\util\\ArgumentOutOfRangeError.js","dependencies":[{"path":"C:\\wamp64\\www\\DTMOWED\\feep\\frontend\\node_modules\\rxjs\\_esm5\\internal\\util\\ArgumentOutOfRangeError.js","mtime":1548987628469},{"path":"C:\\wamp64\\www\\DTMOWED\\feep\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1548987609424},{"path":"C:\\wamp64\\www\\DTMOWED\\feep\\frontend\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1548987590941}],"contextDependencies":[],"result":["/** PURE_IMPORTS_START tslib PURE_IMPORTS_END */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * An error thrown when an element was queried at a certain index of an\r\n * Observable, but no such index or position exists in that sequence.\r\n *\r\n * @see {@link elementAt}\r\n * @see {@link take}\r\n * @see {@link takeLast}\r\n *\r\n * @class ArgumentOutOfRangeError\r\n */\r\nvar ArgumentOutOfRangeError = /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(ArgumentOutOfRangeError, _super);\r\n    function ArgumentOutOfRangeError() {\r\n        var _this = _super.call(this, 'argument out of range') || this;\r\n        _this.name = 'ArgumentOutOfRangeError';\r\n        Object.setPrototypeOf(_this, ArgumentOutOfRangeError.prototype);\r\n        return _this;\r\n    }\r\n    return ArgumentOutOfRangeError;\r\n}(Error));\r\nexport { ArgumentOutOfRangeError };\r\n//# sourceMappingURL=ArgumentOutOfRangeError.js.map\r\n",null]}