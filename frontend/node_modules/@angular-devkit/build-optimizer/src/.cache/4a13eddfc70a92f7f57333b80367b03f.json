{"remainingRequest":"C:\\wamp64\\www\\DTMOWED\\feep\\frontend\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\wamp64\\www\\DTMOWED\\feep\\frontend\\node_modules\\rxjs\\_esm5\\internal\\operators\\throwIfEmpty.js","dependencies":[{"path":"C:\\wamp64\\www\\DTMOWED\\feep\\frontend\\node_modules\\rxjs\\_esm5\\internal\\operators\\throwIfEmpty.js","mtime":1548987628409},{"path":"C:\\wamp64\\www\\DTMOWED\\feep\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1548987609424},{"path":"C:\\wamp64\\www\\DTMOWED\\feep\\frontend\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1548987590941}],"contextDependencies":[],"result":["/** PURE_IMPORTS_START _tap,_util_EmptyError PURE_IMPORTS_END */\r\nimport { tap } from './tap';\r\nimport { EmptyError } from '../util/EmptyError';\r\n/**\r\n * If the source observable completes without emitting a value, it will emit\r\n * an error. The error will be created at that time by the optional\r\n * `errorFactory` argument, otherwise, the error will be {@link ErrorEmpty}.\r\n *\r\n * @example\r\n *\r\n * const click$ = fromEvent(button, 'click');\r\n *\r\n * clicks$.pipe(\r\n *   takeUntil(timer(1000)),\r\n *   throwIfEmpty(\r\n *     () => new Error('the button was not clicked within 1 second')\r\n *   ),\r\n * )\r\n * .subscribe({\r\n *   next() { console.log('The button was clicked'); },\r\n *   error(err) { console.error(err); },\r\n * });\r\n * @param {Function} [errorFactory] A factory function called to produce the\r\n * error to be thrown when the source observable completes without emitting a\r\n * value.\r\n */\r\nexport var throwIfEmpty = function (errorFactory) {\r\n    if (errorFactory === void 0) {\r\n        errorFactory = defaultErrorFactory;\r\n    }\r\n    return tap({\r\n        hasValue: false,\r\n        next: function () { this.hasValue = true; },\r\n        complete: function () {\r\n            if (!this.hasValue) {\r\n                throw errorFactory();\r\n            }\r\n        }\r\n    });\r\n};\r\nfunction defaultErrorFactory() {\r\n    return new EmptyError();\r\n}\r\n//# sourceMappingURL=throwIfEmpty.js.map\r\n",null]}