{"remainingRequest":"C:\\Users\\HP User\\Documents\\trabajos\\washington\\fepp\\frontend\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\HP User\\Documents\\trabajos\\washington\\fepp\\frontend\\node_modules\\core-js\\modules\\es6.number.constructor.js","dependencies":[{"path":"C:\\Users\\HP User\\Documents\\trabajos\\washington\\fepp\\frontend\\node_modules\\core-js\\modules\\es6.number.constructor.js","mtime":1549240396126},{"path":"C:\\Users\\HP User\\Documents\\trabajos\\washington\\fepp\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1549240389071},{"path":"C:\\Users\\HP User\\Documents\\trabajos\\washington\\fepp\\frontend\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1549240333687}],"contextDependencies":[],"result":["'use strict';\r\nvar global            = require('./_global')\r\n  , has               = require('./_has')\r\n  , cof               = require('./_cof')\r\n  , inheritIfRequired = require('./_inherit-if-required')\r\n  , toPrimitive       = require('./_to-primitive')\r\n  , fails             = require('./_fails')\r\n  , gOPN              = require('./_object-gopn').f\r\n  , gOPD              = require('./_object-gopd').f\r\n  , dP                = require('./_object-dp').f\r\n  , $trim             = require('./_string-trim').trim\r\n  , NUMBER            = 'Number'\r\n  , $Number           = global[NUMBER]\r\n  , Base              = $Number\r\n  , proto             = $Number.prototype\r\n  // Opera ~12 has broken Object#toString\r\n  , BROKEN_COF        = cof(require('./_object-create')(proto)) == NUMBER\r\n  , TRIM              = 'trim' in String.prototype;\r\n\r\n// 7.1.3 ToNumber(argument)\r\nvar toNumber = function(argument){\r\n  var it = toPrimitive(argument, false);\r\n  if(typeof it == 'string' && it.length > 2){\r\n    it = TRIM ? it.trim() : $trim(it, 3);\r\n    var first = it.charCodeAt(0)\r\n      , third, radix, maxCode;\r\n    if(first === 43 || first === 45){\r\n      third = it.charCodeAt(2);\r\n      if(third === 88 || third === 120)return NaN; // Number('+0x1') should be NaN, old V8 fix\r\n    } else if(first === 48){\r\n      switch(it.charCodeAt(1)){\r\n        case 66 : case 98  : radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\r\n        case 79 : case 111 : radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\r\n        default : return +it;\r\n      }\r\n      for(var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++){\r\n        code = digits.charCodeAt(i);\r\n        // parseInt parses a string to a first unavailable symbol\r\n        // but ToNumber should return NaN if a string contains unavailable symbols\r\n        if(code < 48 || code > maxCode)return NaN;\r\n      } return parseInt(digits, radix);\r\n    }\r\n  } return +it;\r\n};\r\n\r\nif(!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')){\r\n  $Number = function Number(value){\r\n    var it = arguments.length < 1 ? 0 : value\r\n      , that = this;\r\n    return that instanceof $Number\r\n      // check on 1..constructor(foo) case\r\n      && (BROKEN_COF ? fails(function(){ proto.valueOf.call(that); }) : cof(that) != NUMBER)\r\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\r\n  };\r\n  for(var keys = require('./_descriptors') ? gOPN(Base) : (\r\n    // ES3:\r\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\r\n    // ES6 (in case, if modules with ES6 Number statics required before):\r\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\r\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\r\n  ).split(','), j = 0, key; keys.length > j; j++){\r\n    if(has(Base, key = keys[j]) && !has($Number, key)){\r\n      dP($Number, key, gOPD(Base, key));\r\n    }\r\n  }\r\n  $Number.prototype = proto;\r\n  proto.constructor = $Number;\r\n  require('./_redefine')(global, NUMBER, $Number);\r\n}",null]}